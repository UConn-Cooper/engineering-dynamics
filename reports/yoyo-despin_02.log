Traceback (most recent call last):
  File "/home/ryan/.local/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/ryan/.local/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/ryan/.local/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/ryan/.local/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/miniconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/ryan/.local/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/home/ryan/.local/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/ryan/.local/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
c = np.sqrt(I/2/m/R**2 + 1)
wB = lambda t: (c-w0**2*t**2)/(c+w0**2*t**2)*w0
wC = wB(t) + w0
x = R*np.cos(wC*t) - R*w0*t*np.sin(wC*t)
y = R*np.sin(wC*t) + R*w0*t*np.cos(wC*t)
plt.plot(x,y, 'o')
plt.plot(-x,-y, 'o')
plt.axes('equal')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-4-9064dff0f55e>[0m in [0;36m<module>[0;34m[0m
[1;32m      6[0m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mx[0m[0;34m,[0m[0my[0m[0;34m,[0m [0;34m'o'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      7[0m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0;34m-[0m[0mx[0m[0;34m,[0m[0;34m-[0m[0my[0m[0;34m,[0m [0;34m'o'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 8[0;31m [0mplt[0m[0;34m.[0m[0maxes[0m[0;34m([0m[0;34m'equal'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/pyplot.py[0m in [0;36maxes[0;34m(arg, **kwargs)[0m
[1;32m    830[0m         [0;32mreturn[0m [0msubplot[0m[0;34m([0m[0;36m111[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    831[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 832[0;31m         [0;32mreturn[0m [0mgcf[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0madd_axes[0m[0;34m([0m[0marg[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    833[0m [0;34m[0m[0m
[1;32m    834[0m [0;34m[0m[0m

[0;32m/opt/miniconda3/lib/python3.8/site-packages/matplotlib/figure.py[0m in [0;36madd_axes[0;34m(self, *args, **kwargs)[0m
[1;32m   1239[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1240[0m             [0mrect[0m [0;34m=[0m [0margs[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1241[0;31m             [0;32mif[0m [0;32mnot[0m [0mnp[0m[0;34m.[0m[0misfinite[0m[0;34m([0m[0mrect[0m[0;34m)[0m[0;34m.[0m[0mall[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1242[0m                 raise ValueError('all entries in rect must be finite '
[1;32m   1243[0m                                  'not {}'.format(rect))

[0;31mTypeError[0m: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
TypeError: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''

